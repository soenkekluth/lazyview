(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["LazyLoadPlugin"] = factory();
	else
		root["LazyLoadPlugin"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!*********************!*\
  !*** ./lazyload.js ***!
  \*********************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _lazyview = __webpack_require__(/*! ../lazyview.plugin */ 1);
	
	var _lazyview2 = _interopRequireDefault(_lazyview);
	
	var _objectAssign = __webpack_require__(/*! object-assign */ 2);
	
	var _objectAssign2 = _interopRequireDefault(_objectAssign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	module.exports = function (options) {
	
	  return new _lazyview2.default(function (lazyView) {
	
	    var opts = (0, _objectAssign2.default)({}, _lazyview2.default.defaults, options);
	    var el = lazyView.el;
	    var src = el.getAttribute('data-src');
	    var srcset = el.getAttribute('data-srcset');
	
	    var _dispatchLoad = function dispatchLoad(event) {
	
	      setTimeout(function () {
	        lazyView.scroll.trigger('scroll:resize');
	        if (opts.destroy) {
	          lazyView.destroy();
	        }
	      }, 100);
	
	      if (opts.loadClass) {
	        el.classList.remove(opts.loadClass);
	      }
	
	      if (opts.completeClass) {
	        el.classList.add(opts.completeClass);
	      }
	      el.removeEventListener('load', _dispatchLoad);
	
	      if (opts.onComplete) {
	        opts.onComplete.call(undefined, lazyView);
	      }
	    };
	
	    var onEnter = function onEnter() {
	
	      var isChanged = false;
	      if (src && el.getAttribute('src') !== src) {
	        isChanged = true;
	        el.setAttribute('src', src);
	      }
	
	      if (srcset && el.getAttribute('srcset') !== srcset) {
	        isChanged = true;
	        el.setAttribute('srcset', srcset);
	      }
	
	      if (isChanged) {
	        el.addEventListener('load', _dispatchLoad);
	
	        if (opts.loadClass) {
	          el.classList.add(opts.loadClass);
	        }
	
	        el.removeAttribute('data-src');
	        el.removeAttribute('data-srcset');
	      }
	
	      if (lazyView.options.offsets && lazyView.options.offsets.threshold) {
	        delete lazyView.options.offsets.threshold;
	      }
	
	      if (opts.onInit) {
	        opts.onInit.call(undefined, lazyView);
	      }
	    };
	
	    if (src || srcset) {
	
	      if (opts.threshold) {
	        lazyView.options.offsets = lazyView.options.offsets || {};
	        lazyView.options.offsets.threshold = options.threshold;
	        lazyView.once('enter:threshold', onEnter);
	      } else {
	        lazyView.once('enter', onEnter);
	      }
	    } else {
	      el = null;
	      _dispatchLoad = null;
	      onEnter = null;
	    }
	  });
	};

/***/ },
/* 1 */
/*!*****************************!*\
  !*** ../lazyview.plugin.js ***!
  \*****************************/
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var LazyViewPlugin = function LazyViewPlugin(creator) {
	  _classCallCheck(this, LazyViewPlugin);
	
	  this.creator = creator;
	};
	
	LazyViewPlugin.defaults = {
	  destroy: false,
	  completeClass: null,
	  initClass: null,
	  onInit: null,
	  onComplete: null
	};
	exports.default = LazyViewPlugin;
	module.exports = exports["default"];

/***/ },
/* 2 */
/*!***********************************************************************************!*\
  !*** /Users/soenke/Developer/Workspaces/Github/lazyview/~/object-assign/index.js ***!
  \***********************************************************************************/
/***/ function(module, exports) {

	'use strict';
	/* eslint-disable no-unused-vars */
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}
	
			// Detect buggy property enumeration order in older V8 versions.
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}
	
			return true;
		} catch (e) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}
	
	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (Object.getOwnPropertySymbols) {
				symbols = Object.getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};


/***/ }
/******/ ])
});
;
//# sourceMappingURL=lazyview.lazyload.plugin.min.js.map